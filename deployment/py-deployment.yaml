apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: py-server
  name: py-server
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: py-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-server
    spec:
      containers:
        - image: gcr.io/main-composite-344506/python
          imagePullPolicy: IfNotPresent
          name: py-image
          volumeMounts:
          - mountPath: /mnt/fileserver
            name: mypvc
      volumes:
      - name: mypvc
        persistentVolumeClaim:
          claimName: nfs
          readOnly: false
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: py-server
  name: py-server-hpa-rpvo
  namespace: default
spec:
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: py-server
---
apiVersion: v1
kind: Service
metadata:
  name: py-server-nodeport-service
  namespace: default
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80":"backend-config"}}'
spec:
  selector:
    app: py-server
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
# apiVersion: v1
# kind: Service
# metadata:
#   name: python-nodeport-service
#   namespace: default
# spec:
#   clusterIP: 10.52.1.89
#   externalTrafficPolicy: Cluster
#   ports:
#     - nodePort: 31721
#       port: 85
#       protocol: TCP
#       targetPort: 8000
#   selector:
#     app: python
#   sessionAffinity: None
#   type: NodePort
